@helper Message(Dictionary<string,object> data, ToSic.SexyContent.IAppAndDataHelpers context)
{
    // Here the "non-sexy" fields get filtered out so the mail owner (and customer) won't see IP, EntityGuid etc.
    // If you do want to send these informations, just remove the statement out of the Where function
    var registrationData = data.Where(d => d.Key != "EntityGuid" || d.Key != "ModuleId" || d.Key != "SenderIP" || d.Key != "Timestamp" || d.Key != "sendFormWithApi");
    
    <!doctype html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width">
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <style type="text/css">
            body { font-family: Helvetica, sans-serif; }
        </style>
    </head>
    <body>
        <h1>@context.App.Resources.MailOwnerTitle</h1>
        <div>
            @context.App.Resources.MailOwnerContent
        </div>
        <table width="100%">
            @foreach (var item in registrationData)
            {
                <tr>
                    <td width="10%"><b>@item.Key</b></td>
                    <td>@item.Value</td>
                </tr>
            }
        </table>
    </body>
    </html>
}

@functions {
	public string Subject(dynamic data, dynamic context) {
        // create custom code to generate the subject here...

        // or just return the setting configured in the form
        return !String.IsNullOrWhiteSpace(context.Content.OwnerMailSubject)
            ? context.Content.OwnerMailSubject.ToString()
            : context.App.Settings.OwnerMailSubject.ToString();
	}
}

